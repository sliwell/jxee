    从什么时候开始，一直重复着昨天的bug，好吧，认真思考吧！
                                            ---题记
                                            
1. 代码质量定义
    着重点：易读性，可维护性，可扩展（伸缩）性
2. 如何提升代码质量？    
2.1 编写规范
    编程风格；
    注释风格；
    
2.2 语法规范
    语法检测工具（pclint，misrac）

2.3 架构及策略
    状态机
    
2.4 通信机制

2.5 资源保护
    代码的可重入性（中断及多线程环境）；

3. bug分类
3.1 非法访问（越界访问、共享资源冲突、非对齐访问）
    
    案例1
    data[32] = {0};
    tmp = eeprom_read(addr);
    for(i=0;i<tmp;i++)
    {
        data[i] = ...
    }
    由于tmp的值可能是非法值，大于32即造成访问越界问题；

    案例2
    u32 *p;
    p = (u32 *)&buf[x];
    for()
    {
        *p = xxx;   //hardfault error!
    }
    针对ARM内核的数据访问，数据地址必须是访问数据类型的整数倍，即对其访问；
    在此例子中，p的地址必须为sizeof(u32)的整数倍，否则就会造成非对齐访问错误。
    备注：使用非对齐访问标识符__packed亦可避免此类错误，但造成效率下降。
    如 __packed u32 *p;
    p = (__packed u32 *)&buf[x];
    for()
    {
        *p = xxx;    //ok
    }
